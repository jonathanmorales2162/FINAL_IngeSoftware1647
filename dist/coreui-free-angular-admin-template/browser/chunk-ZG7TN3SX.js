var l=Object.defineProperty,q=Object.defineProperties;var r=Object.getOwnPropertyDescriptors;var f=Object.getOwnPropertySymbols;var m=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var k=(a,b,c)=>b in a?l(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,s=(a,b)=>{for(var c in b||={})m.call(b,c)&&k(a,c,b[c]);if(f)for(var c of f(b))n.call(b,c)&&k(a,c,b[c]);return a},t=(a,b)=>q(a,r(b));var u=(a,b)=>{var c={};for(var d in a)m.call(a,d)&&b.indexOf(d)<0&&(c[d]=a[d]);if(a!=null&&f)for(var d of f(a))b.indexOf(d)<0&&n.call(a,d)&&(c[d]=a[d]);return c};var v=(a,b)=>{for(var c in b)l(a,c,{get:b[c],enumerable:!0})};var i=(a,b,c)=>{if(!b.has(a))throw TypeError("Cannot "+c)};var w=(a,b,c)=>(i(a,b,"read from private field"),c?c.call(a):b.get(a)),x=(a,b,c)=>{if(b.has(a))throw TypeError("Cannot add the same private member more than once");b instanceof WeakSet?b.add(a):b.set(a,c)},y=(a,b,c,d)=>(i(a,b,"write to private field"),d?d.call(a,c):b.set(a,c),c);var z=(a,b,c)=>(i(a,b,"access private method"),c);var A=(a,b,c)=>new Promise((d,j)=>{var o=e=>{try{g(c.next(e))}catch(h){j(h)}},p=e=>{try{g(c.throw(e))}catch(h){j(h)}},g=e=>e.done?d(e.value):Promise.resolve(e.value).then(o,p);g((c=c.apply(a,b)).next())});export{s as a,t as b,u as c,v as d,w as e,x as f,y as g,z as h,A as i};
